from typing import Any, Protocol

from app.domain.articles.entities import Article
from app.domain.commons.entities import ArticleType, DisplayGroup, Item
from app.domain.entities import PyObjectId
from app.domain.shops.entities import Shop
from app.domain.users.entities import User


class RepositoryProtocol(Protocol):
    # Collection 'users'
    def get_user_by_email(self, email: str) -> User | None: ...

    # Collection shops
    def get_shops(self) -> list[Shop]: ...

    # Collection 'types'
    def get_article_types(
        self,
        name: str | None = None,
        display_group: DisplayGroup | None = None,
    ) -> list[ArticleType]: ...
    def get_article_type_by_name(self, name: str) -> ArticleType: ...
    def get_article_types_by_list(
        self,
        display_group: DisplayGroup,
    ) -> list[ArticleType]: ...

    # Collection 'articles'
    def get_all_articles(self) -> list[Article]: ...
    def get_articles_by_list(self, display_group: DisplayGroup) -> list[Article]: ...
    def get_article(self, article_id: PyObjectId) -> Article: ...
    def create_article(self, article: Article) -> Article: ...
    def delete_article(self, article: Article) -> None: ...

    def get_items_dict(self, volume_category: str | None) -> dict[str, Any]: ...
    def get_items(self, category: str) -> list[Item]: ...
