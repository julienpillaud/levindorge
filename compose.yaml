services:

  traefik:
    container_name: "traefik"
    image: "traefik:v2.10"
    restart: "always"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "certificates:/certificates"
    command:
      - "--accesslog"
      - "--log"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"

      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${LETS_ENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/certificates/acme.json"

  app:
    container_name: "app"
    build: .
    restart: "always"
    env_file:
      - ".env"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
      - "traefik.http.routers.app.rule=Host(`app.${DOMAIN}`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"

  redis:
    container_name: "redis"
    image: "redis:7.2"
    restart: "always"

  worker:
    container_name: "worker"
    depends_on:
      - "redis"
    build: .
    restart: "always"
    env_file:
      - ".env"
    command: "celery -A app.worker worker -B --loglevel=info"

  dozzle:
    container_name: "dozzle"
    image: "amir20/dozzle"
    restart: "always"
    environment:
      - "DOZZLE_BASE=/logs"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
      - "traefik.http.routers.dozzle.rule=Host(`${DOMAIN}`) && PathPrefix(`/logs`)"
      - "traefik.http.routers.dozzle.entrypoints=websecure"
      - "traefik.http.routers.dozzle.tls.certresolver=myresolver"
      - "traefik.http.routers.dozzle.middlewares=dozzle_auth"
      - "traefik.http.middlewares.dozzle_auth.basicauth.users=${DOZZLE_BASICAUTH}"

volumes:
  certificates:
